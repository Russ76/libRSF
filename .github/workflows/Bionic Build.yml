name: Bionic Build
on: 
  push:
    paths-ignore:
      - 'datasets/**'
      - 'docs/**'
      - 'matlab/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'datasets/**'
      - 'docs/**'
      - 'matlab/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
      
  # enable manual trigger
  workflow_dispatch:
  
  # run on first day of the month
  schedule:
    - cron: '0 0 1 * *'
    
jobs:
  Bionic-Build:
    name: Build libRSF
    runs-on: ubuntu-18.04
    steps:
      # checkout repo
      - name: checkout
        uses: actions/checkout@v2
        
      # install dependencies
      - name: Install dependencies
        run: ./InstallDependencies.bash
        shell: bash
        
      # build & install libRSF
      - name: Build lib
        run: ./Build.bash
        shell: bash 
      - name: Install lib
        working-directory: build
        run: sudo make install
        
      # uninstall libRSF
      - name: Uninstall lib
        working-directory: build
        run: sudo make uninstall
        
      # save build for test
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
        
  Bionic-Test:
    name: Test libRSF
    runs-on: ubuntu-18.04
    needs: [Bionic-Build]
    steps:
      # checkout repo
      - name: checkout
        uses: actions/checkout@v2
        
      # get cached build
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
          
      # install dependencies
      - name: Install dependencies
        run: ./InstallDependencies.bash
        shell: bash
        
      # build libRSF tests
      - name: Run CMake
        working-directory: build
        run: cmake -DLIBRSF_BUILD_TEST=on ..
      - name: Build tests
        working-directory: build
        run: make all -j$(getconf _NPROCESSORS_ONLN)
        
      # run tests
      - name: Run tests
        working-directory: build
        run: make test
